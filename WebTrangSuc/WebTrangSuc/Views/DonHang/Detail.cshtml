@{
    ViewBag.Title = "Chi tiết đơn hàng";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}

<div class="container mx-auto px-4 py-8 pt-72">
    <div class="bg-white rounded-lg shadow-lg p-6 mb-8">
        <h1 class="text-2xl font-bold text-gray-800 mb-6">Chi tiết đơn hàng</h1>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mb-8">
            <!-- Customer Information -->
            <div class="bg-gray-50 p-6 rounded-lg">
                <h2 class="text-lg font-semibold text-gray-700 mb-4">Thông tin khách hàng</h2>
                <div class="space-y-3">
                    <div>
                        <label class="block text-sm font-medium text-gray-600">Tên</label>
                        <p class="mt-1 text-gray-800 customer-name">Loading...</p>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-600">Địa chỉ</label>
                        <p class="mt-1 text-gray-800 customer-address">Loading...</p>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-600">Email</label>
                        <p class="mt-1 text-gray-800 customer-email">Loading...</p>
                    </div>
                </div>
            </div>

            <!-- Order Status -->
            <div class="bg-gray-50 p-6 rounded-lg">
                <h2 class="text-lg font-semibold text-gray-700 mb-4">Thông tin hóa đơn</h2>
                <div class="space-y-3">
                    <div>
                        <label class="block text-sm font-medium text-gray-600">Mã hóa đơn</label>
                        <p class="mt-1 text-gray-800 order-id">Loading...</p>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-600">Ngày tạo hóa đơn</label>
                        <p class="mt-1 text-gray-800 order-date">Loading...</p>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-600">Phương thức thanh toán</label>
                        <p class="mt-1 text-gray-800 order-payment">Loading...</p>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-600">Trạng thái</label>
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium mt-1 order-status">Loading...</span>
                    </div>
                    <div id="cancelButtonContainer" class="mt-4 hidden">
                        <button id="cancelOrderBtn" class="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600">Hủy đơn hàng</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Product Details Table -->
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tên sản phẩm</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Số lượng</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Giá</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Thành tiền</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    <!-- Rows will be dynamically added here -->
                </tbody>
                <tfoot>
                    <tr class="bg-gray-50">
                        <td colspan="3" class="px-6 py-4 text-sm font-medium text-gray-900 text-right">Tổng tiền:</td>
                        <td class="px-6 py-4 text-sm font-medium text-gray-900 order-total">Loading...</td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const orderId = localStorage.getItem("orderId");
        if (!orderId) {
            alert("Không tìm thấy mã hóa đơn. Vui lòng thử lại.");
            return;
        }

        loadOrderDetails(orderId);

        async function loadOrderDetails(orderId) {
            try {
                const response = await fetch(`/api/donhang/${orderId}`);
                if (!response.ok) {
                    const errorData = await response.json();
                    console.error("Lỗi từ API:", errorData);
                    showError("Không thể tải chi tiết hóa đơn. Vui lòng thử lại.");
                    return;
                }

                const order = await response.json();
                console.log("Dữ liệu từ API:", order); // Log để kiểm tra dữ liệu
                renderOrderDetails(order);
            } catch (error) {
                console.error("Lỗi khi tải chi tiết hóa đơn:", error);
                showError("Đã xảy ra lỗi. Vui lòng thử lại.");
            }
        }

        function renderOrderDetails(order) {
            let statusText = "";
            let statusClass = [];
            switch (order.OrderStatus) {
                case 0:
                    statusText = "Mới";
                    statusClass = ["bg-blue-100", "text-blue-800"];
                    break;
                case 1:
                    statusText = "Đang xử lý";
                    statusClass = ["bg-yellow-100", "text-yellow-800"];
                    break;
                case 2:
                    statusText = "Đã giao";
                    statusClass = ["bg-green-100", "text-green-800"];
                    break;
                case 3:
                    statusText = "Hủy";
                    statusClass = ["bg-red-100", "text-red-800"];
                    break;
                default:
                    statusText = "Không xác định";
                    statusClass = ["bg-gray-100", "text-gray-800"];
            }

            // Hiển thị thông tin khách hàng
            document.querySelector(".customer-name").innerText = order.TenKhachHang || "N/A";
            document.querySelector(".customer-address").innerText = order.DiaChi || "N/A";
            document.querySelector(".customer-email").innerText = order.Email || "N/A";

            // Hiển thị thông tin đơn hàng
            document.querySelector(".order-id").innerText = `#ORD${order.OrderId}`;
            document.querySelector(".order-date").innerText = new Date(order.OrderDate).toLocaleDateString();
            document.querySelector(".order-status").innerText = statusText;
            document.querySelector(".order-status").classList.add(...statusClass);
            document.querySelector(".order-total").innerText = `${order.TotalPrice.toLocaleString()} ₫`;
            document.querySelector(".order-payment").innerText = order.PaymentMethod;

            // Hiển thị nút hủy nếu trạng thái là "Mới" hoặc "Đang xử lý"
            if (order.OrderStatus === 0 || order.OrderStatus === 1) {
                const cancelButtonContainer = document.getElementById("cancelButtonContainer");
                cancelButtonContainer.classList.remove("hidden");
                document.getElementById("cancelOrderBtn").addEventListener("click", () => cancelOrder(order.OrderId));
            }

            // Hiển thị danh sách sản phẩm
            const tbody = document.querySelector("tbody");
            tbody.innerHTML = ""; // Xóa nội dung cũ

            order.Items.forEach(item => {
                const rowHTML = `
                    <tr>
                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">${item.ProductName}</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${item.Quantity}</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${item.Price.toLocaleString()} ₫</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${item.Total.toLocaleString()} ₫</td>
                    </tr>
                `;
                tbody.insertAdjacentHTML("beforeend", rowHTML);
            });
        }

        async function cancelOrder(orderId) {
            if (!confirm("Bạn có chắc chắn muốn hủy đơn hàng này không?")) return;

            try {
                const response = await fetch(`/api/donhang/cancel/${orderId}`, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    }
                });

                if (!response.ok) {
                    const errorData = await response.json();
                    console.error("Lỗi khi hủy đơn hàng:", errorData);
                    showError("Không thể hủy đơn hàng. Vui lòng thử lại.");
                    return;
                }

                const result = await response.json();
                alert(result.Message);
                loadOrderDetails(orderId); // Tải lại chi tiết đơn hàng
            } catch (error) {
                console.error("Lỗi khi hủy đơn hàng:", error);
                showError("Đã xảy ra lỗi. Vui lòng thử lại.");
            }
        }

        function showError(message) {
            alert(message);
        }
    });
</script>