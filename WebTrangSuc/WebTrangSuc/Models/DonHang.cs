//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System;

namespace WebTrangSuc.Models
{
    public partial class DonHang
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public DonHang()
        {
            this.DonHangChiTiets = new HashSet<DonHangChiTiet>();
            this.OrderState = new NewOrderState();
        }

        public int ID { get; set; }
        public Nullable<int> IDUser { get; set; }
        public Nullable<int> TongTien { get; set; }
        public Nullable<System.DateTime> NgayTaoHoaDon { get; set; }
        public Nullable<int> TrangThaiGiaoHang { get; set; }
        public Nullable<int> TrangThaiDonHang { get; set; }
        public Nullable<int> IDVoucher { get; set; }
        public string PhuongThucThanhToan { get; set; }

        public virtual TaiKhoan TaiKhoan { get; set; }
        public virtual Voucher Voucher { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DonHangChiTiet> DonHangChiTiets { get; set; }

        public IOrderState OrderState { get; set; }

        public void Process()
        {
            if (OrderState is NewOrderState)  
            {
                OrderState.ProcessOrder(this);
            }
            else
            {
                throw new InvalidOperationException("Đơn hàng không thể xử lý.");
            }
        }

        public void Cancel()
        {
            if (OrderState is NewOrderState || OrderState is ProcessingOrderState) 
            {
                OrderState.CancelOrder(this);
            }
            else
            {
                throw new InvalidOperationException("Đơn hàng đã giao hoặc đã hủy, không thể hủy.");
            }
        }

        public void Deliver()
        {
            if (TrangThaiDonHang != 1)  
            {
                throw new InvalidOperationException("Đơn hàng phải ở trạng thái 'Đang xử lý' để có thể giao.");
            }

            TrangThaiDonHang = 2;  
            TrangThaiGiaoHang = 1;  
            OrderState = new DeliveredOrderState();  
        }

        public string GetCurrentStatus()
            {
                switch (TrangThaiDonHang)
                {
                    case 0:
                        return "Mới";
                    case 1:
                        return "Đang xử lý";
                    case 2:
                        return "Đã giao";
                    case 3:
                        return "Hủy";
                    default:
                        return "Không rõ";
                }
            }

    }
}
